---
import DashboardLayout from '../layouts/DashboardLayout.astro';
---

<DashboardLayout title="Configuración de Accesibilidad" activePage="accesibilidad">
  <div class="flex-1 p-4 sm:p-6 lg:p-8 overflow-y-auto">
    
    <div class="mb-8">
      <h2 class="text-2xl sm:text-3xl font-bold mb-2">Configuración de Accesibilidad</h2>
      <p class="text-gray-600 dark:text-gray-400">Personaliza la interfaz según tus necesidades</p>
    </div>

    {/* Sección de tema visual */}
    <div class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6 mb-6 shadow-sm">
      <div class="flex items-center justify-between">
        <div>
          <h3 class="text-xl font-bold mb-2 flex items-center gap-2">
            <span class="material-symbols-outlined text-primary">palette</span>
            Modo de visualización
          </h3>
          <p class="text-gray-600 dark:text-gray-400">Cambia entre el tema claro y oscuro</p>
        </div>
      
        <div class="flex items-center gap-3">
          <span class="material-symbols-outlined text-primary text-2xl">light_mode</span>
          <label class="relative inline-flex items-center cursor-pointer">
            <input type="checkbox" id="dark-mode" class="sr-only peer" />
            <div class="w-14 h-7 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary/25 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-6 after:w-6 after:transition-all dark:border-gray-600 peer-checked:bg-primary"></div>
          </label>
          <span class="material-symbols-outlined text-primary text-2xl">dark_mode</span>
        </div>
        
      </div>

    </div>

    {/* Sección de fuente OpenDyslexic */}
    <div class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6 mb-6 shadow-sm">
      <div class="flex items-center justify-between">
        <div class="flex-1">
          <h3 class="text-xl font-bold mb-2 flex items-center gap-2">
            <span class="material-symbols-outlined text-primary">text_fields</span>
            Fuente para dislexia
          </h3>
          <p class="text-gray-600 dark:text-gray-400">
            Activa la tipografía OpenDyslexic, diseñada específicamente para mejorar la legibilidad en personas con dislexia
          </p>
        </div>
      
        <div class="ml-4">
          <label class="relative inline-flex items-center cursor-pointer">
            <input type="checkbox" id="dyslexic-font-toggle" class="sr-only peer" />
            <div class="w-14 h-7 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary/25 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-6 after:w-6 after:transition-all dark:border-gray-600 peer-checked:bg-primary"></div>
          </label>
        </div>
        
      </div>
    </div>

    <!--
    {/* Tamaño de texto */}
    <div class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6 mb-6 shadow-sm">
      <h3 class="text-xl font-bold mb-4 flex items-center gap-2">
        <span class="material-symbols-outlined text-primary">format_size</span>
        Tamaño de Texto
      </h3>
      <div class="flex flex-col gap-4">
        <div class="flex items-center justify-between">
          <span class="text-sm font-medium">Tamaño del texto</span>
          <span class="text-sm text-gray-600 dark:text-gray-400" id="text-size-value">100%</span>
        </div>
        <input 
          id="text-size-range"
          type="range" 
          min="800" 
          max="150" 
          value="100" 
          class="w-full h-2 bg-gray-200 dark:bg-gray-700 rounded-lg appearance-none cursor-pointer [&::-webkit-slider-thumb]:bg-primary"
        />
        <div class="flex justify-between text-xs text-gray-500 dark:text-gray-400">
          <span>80%</span>
          <span>100%</span>
          <span>120%</span>
          <span>150%</span>
        </div>
        <div class="p-4 bg-gray-50 dark:bg-gray-900 rounded-lg">
          <p class="mb-2">Vista previa del texto:</p>
          <p class="text-lg" id="text-preview">Este es un ejemplo de cómo se verá el texto con el tamaño seleccionado.</p>
        </div>
      </div>
    </div>
   
    {/* Contraste */}
    <div class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6 mb-6 shadow-sm">
      <h3 class="text-xl font-bold mb-4 flex items-center gap-2">
        <span class="material-symbols-outlined text-primary">contrast</span>
        Alto Contraste
      </h3>
      <div class="flex items-center justify-between">
        <div>
          <p class="font-medium">Activar modo de alto contraste</p>
          <p class="text-sm text-gray-600 dark:text-gray-400">Mejora la visibilidad de los elementos en pantalla</p>
        </div>
        <label class="relative inline-flex items-center cursor-pointer">
          <input type="checkbox" id="high-contrast-toggle" class="sr-only peer" />
          <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary/25 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-primary"></div>
        </label>
      </div>
    </div>
    
    -->

    {/* Botones de acción */}
    <div class="flex flex-col sm:flex-row gap-4 justify-end">
      <button id="reset-btn" class="px-6 py-2 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors">
        Restaurar valores por defecto
      </button>
      <button class="px-6 py-2 bg-primary text-white rounded-lg hover:bg-primary/90 transition-colors">
        Guardar cambios
      </button>
    </div>

  </div>
</DashboardLayout>

<script>
  // Función para obtener el tema actual
  const getTheme = () => {
    return localStorage.getItem('theme') || 'light';
  };

  // Función para aplicar el tema
  const applyTheme = (theme: string) => {
    if (theme === 'dark') {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  };

  // Función para actualizar el toggle
  const updateToggle = (isDark: boolean) => {
    const toggle = document.getElementById('dark-mode') as HTMLInputElement;
    if (toggle) {
      toggle.checked = isDark;
    }
  };

  // Inicializar cuando cargue el DOM
  document.addEventListener('DOMContentLoaded', () => {
    const currentTheme = getTheme();
    const isDark = currentTheme === 'dark';
    
    // Aplicar el tema y actualizar el toggle
    applyTheme(currentTheme);
    updateToggle(isDark);

    // Escuchar cambios en el toggle
    const darkModeToggle = document.getElementById('dark-mode') as HTMLInputElement;
    
    if (darkModeToggle) {
      darkModeToggle.addEventListener('change', (e) => {
        const target = e.target as HTMLInputElement;
        const newTheme = target.checked ? 'dark' : 'light';
        
        // Guardar en localStorage
        localStorage.setItem('theme', newTheme);
        
        // Aplicar el tema
        applyTheme(newTheme);
      });
    }

    // Toggle de fuente OpenDyslexic
    const dyslexicToggle = document.getElementById('dyslexic-font-toggle') as HTMLInputElement;
    
    if (dyslexicToggle) {
      // Inicializar el estado del toggle
      const isDyslexicActive = localStorage.getItem('dyslexic-font') === 'true';
      dyslexicToggle.checked = isDyslexicActive;
      
      // Escuchar cambios
      dyslexicToggle.addEventListener('change', (e) => {
        const target = e.target as HTMLInputElement;
        const isActive = target.checked;
        
        // Guardar en localStorage
        localStorage.setItem('dyslexic-font', isActive.toString());
        
        // Aplicar o quitar la clase
        if (isActive) {
          document.documentElement.classList.add('dyslexic-font');
        } else {
          document.documentElement.classList.remove('dyslexic-font');
        }
      });
    }

    // Botón de resetear
    const resetBtn = document.getElementById('reset-btn');
    if (resetBtn) {
      resetBtn.addEventListener('click', () => {
        // Resetear al tema claro
        localStorage.setItem('theme', 'light');
        applyTheme('light');
        updateToggle(false);
        
        // Resetear fuente OpenDyslexic
        localStorage.setItem('dyslexic-font', 'false');
        document.documentElement.classList.remove('dyslexic-font');
        if (dyslexicToggle) {
          dyslexicToggle.checked = false;
        }
      });
    }
  });
</script>
