---
import DashboardLayout from '../layouts/DashboardLayout.astro';
---
<DashboardLayout title="Configuración de Accesibilidad" activePage="accesibilidad">
  <main class="flex-1 p-4 sm:p-6 lg:p-8 overflow-y-auto space-y-6">
    {/* Encabezado */}
    <header class="mb-8">
      <h2 class="text-2xl sm:text-3xl font-bold mb-2">Configuración de Accesibilidad</h2>
      <p class="text-gray-600 dark:text-gray-400">Personaliza la interfaz según tus necesidades</p>
    </header>

    {/* Región de anuncios accesibles */}
    <div id="a11y-status" class="sr-only" aria-live="polite" aria-atomic="true"></div>

    {/* Sección: Tema visual */}
    <section class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6 shadow-sm flex items-center justify-between">
      <div>
        <h3 class="text-xl font-bold mb-2 flex items-center gap-2">
          <span aria-hidden="true" class="material-symbols-outlined text-primary">palette</span>
          Modo de visualización
        </h3>
        <p class="text-gray-600 dark:text-gray-400">Cambia entre el tema claro y oscuro</p>
      </div>

      <div class="flex items-center gap-3">
        <span aria-hidden="true" class="material-symbols-outlined text-primary text-2xl">light_mode</span>

        {/* Label accesible sin texto visible */}
        <label class="relative inline-flex items-center cursor-pointer">
          {/* Texto de etiqueta no visible para asociar al control */}
          <span id="dark-mode-label" class="sr-only">Modo oscuro</span>

          <input
            type="checkbox"
            id="dark-mode"
            class="sr-only peer"
            role="switch"
            aria-labelledby="dark-mode-label"
            aria-checked="false"
          />
          <span
            class="w-14 h-7 bg-gray-200 rounded-full peer dark:bg-gray-700 peer-focus-visible:ring-4 peer-focus-visible:ring-primary/25 peer-checked:bg-primary relative after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-6 after:w-6 after:transition-all peer-checked:after:translate-x-full peer-checked:after:border-white dark:border-gray-600"
            aria-hidden="true"
          ></span>
        </label>

        <span aria-hidden="true" class="material-symbols-outlined text-primary text-2xl">dark_mode</span>
      </div>
    </section>

    {/* Sección: Fuente para dislexia */}
    <section class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-6 shadow-sm flex items-center justify-between">
      <article>
        <h3 class="text-xl font-bold mb-2 flex items-center gap-2">
          <span aria-hidden="true" class="material-symbols-outlined text-primary">text_fields</span>
          Fuente para dislexia
        </h3>
        <p class="text-gray-600 dark:text-gray-400">
          Activa la tipografía OpenDyslexic, diseñada para mejorar la legibilidad en personas con dislexia
        </p>
      </article>

      <label class="relative inline-flex items-center cursor-pointer ml-4">
        {/* Texto de etiqueta no visible para asociar al control */}
        <span id="dyslexic-font-label" class="sr-only">Activar fuente para dislexia</span>

        <input
          type="checkbox"
          id="dyslexic-font-toggle"
          class="sr-only peer"
          role="switch"
          aria-labelledby="dyslexic-font-label"
          aria-checked="false"
        />
        <span
          class="w-14 h-7 bg-gray-200 rounded-full peer dark:bg-gray-700 peer-focus-visible:ring-4 peer-focus-visible:ring-primary/25 peer-checked:bg-primary relative after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-6 after:w-6 after:transition-all peer-checked:after:translate-x-full peer-checked:after:border-white dark:border-gray-600"
          aria-hidden="true"
        ></span>
      </label>
    </section>
  </main>
</DashboardLayout>

<script>
  // Funciones de tema
  const getTheme = () => localStorage.getItem('theme') || 'light';
  const applyTheme = (theme /**: string */) => {
    if (theme === 'dark') document.documentElement.classList.add('dark');
    else document.documentElement.classList.remove('dark');
  };
  const announce = (msg /**: string */) => {
    const region = document.getElementById('a11y-status');
    if (region) {
      region.textContent = msg;
      // Forzar re-anuncio si fuese necesario
      // region.setAttribute('aria-live', 'polite');
    }
  };

  // Actualiza atributos ARIA del switch de tema
  const updateThemeSwitch = (isDark /**: boolean */) => {
    const toggle = document.getElementById('dark-mode');
    if (toggle) {
      toggle.checked = isDark;
      toggle.setAttribute('aria-checked', String(isDark));
    }
  };

  document.addEventListener('DOMContentLoaded', () => {
    // Inicializar tema
    const currentTheme = getTheme();
    const isDark = currentTheme === 'dark';
    applyTheme(currentTheme);
    updateThemeSwitch(isDark);

    // Listeners
    const darkModeToggle = document.getElementById('dark-mode');
    if (darkModeToggle) {
      darkModeToggle.addEventListener('change', (e) => {
        const target = e.target;
        const newTheme = target.checked ? 'dark' : 'light';
        localStorage.setItem('theme', newTheme);
        applyTheme(newTheme);
        target.setAttribute('aria-checked', String(target.checked));
        announce(target.checked ? 'Modo oscuro activado' : 'Modo claro activado');
      });
    }

    // Toggle de fuente OpenDyslexic
    const dyslexicToggle = document.getElementById('dyslexic-font-toggle');
    if (dyslexicToggle) {
      // Estado inicial
      const isDyslexicActive = localStorage.getItem('dyslexic-font') === 'true';
      dyslexicToggle.checked = isDyslexicActive;
      dyslexicToggle.setAttribute('aria-checked', String(isDyslexicActive));
      if (isDyslexicActive) document.documentElement.classList.add('dyslexic-font');

      // Cambios
      dyslexicToggle.addEventListener('change', (e) => {
        const target = e.target;
        const isActive = target.checked;
        localStorage.setItem('dyslexic-font', String(isActive));
        target.setAttribute('aria-checked', String(isActive));
        if (isActive) {
          document.documentElement.classList.add('dyslexic-font');
          announce('Fuente para dislexia activada');
        } else {
          document.documentElement.classList.remove('dyslexic-font');
          announce('Fuente para dislexia desactivada');
        }
      });
    }

    // Botón de reset (opcional si existe en la página)
    const resetBtn = document.getElementById('reset-btn');
    if (resetBtn) {
      resetBtn.addEventListener('click', () => {
        localStorage.setItem('theme', 'light');
        applyTheme('light');
        updateThemeSwitch(false);
        localStorage.setItem('dyslexic-font', 'false');
        document.documentElement.classList.remove('dyslexic-font');
        const dyslexicToggleEl = document.getElementById('dyslexic-font-toggle');
        if (dyslexicToggleEl) {
          dyslexicToggleEl.checked = false;
          dyslexicToggleEl.setAttribute('aria-checked', 'false');
        }
        announce('Preferencias restablecidas: modo claro y fuente estándar activados');
      });
    }
  });
</script>
