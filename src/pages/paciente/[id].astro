---
import DashboardLayout from '../../layouts/DashboardLayout.astro'

const { id } = Astro.params

// Obtener el par√°metro de fecha de ingreso de la URL
const url = new URL(Astro.request.url)
const fechaIngreso = url.searchParams.get('fecha')

// Convertir el id a n√∫mero
const pacienteId = Number(id)

// Validar que ambos par√°metros est√©n presentes
if (!fechaIngreso) {
  return Astro.redirect('/pacientes')
}

// Filtrar primero por id_usuario en la API, luego por fecha_de_ingreso en el cliente
const API_URL = `https://g4be99438af815a-malackathon2025.adb.eu-madrid-1.oraclecloudapps.com/ords/malackathon/saludmental/`

console.log('=== DEBUG INFO ===')
console.log('Paciente ID buscado:', pacienteId)
console.log('Fecha de Ingreso buscada:', fechaIngreso)

let paciente = null

try {
  // Obtener datos de la API filtrando por id_usuario
  let offset = 0
  const limit = 1000
  let hasMore = true
  
  // Buscar en todas las p√°ginas hasta encontrar el paciente con la fecha correcta
  while (hasMore && !paciente) {
    const response = await fetch(`${API_URL}?q={"id_usuario":${pacienteId}}&limit=${limit}&offset=${offset}`)
    const data = await response.json()
    
    if (data.items && data.items.length > 0) {
      console.log(`üìÑ Encontrados ${data.items.length} registros para id_usuario=${pacienteId}`)
      
      // Filtrar por fecha_de_ingreso en el cliente
      paciente = data.items.find((item: any) => 
        item.id_usuario === pacienteId && item.fecha_de_ingreso === fechaIngreso
      )
      
      if (paciente) {
        console.log('‚úÖ Paciente encontrado - ID:', paciente.id_usuario, 'Fecha:', paciente.fecha_de_ingreso)
        break
      }
      
      // Si hay m√°s datos y no encontramos el paciente, continuar
      hasMore = data.hasMore === true
      offset += data.items.length
    } else {
      hasMore = false
    }
  }
  
  // Si no se encuentra el paciente, devolver a la lista
  if (!paciente) {
    console.log('‚ùå No se encontr√≥ paciente con ID:', pacienteId, 'y fecha:', fechaIngreso)
    return Astro.redirect('/pacientes')
  }
} catch (error) {
  console.error('Error al obtener datos de la API:', error)
  return Astro.redirect('/pacientes')
}

// Mapeo de categor√≠as de ingreso
const CATEGORIAS_INGRESO: Record<number, string> = {
  0: "Trastornos del humor [afectivos]",
  1: "Trastornos mentales y del comportamiento debidos al uso de sustancias psicoactivas",
  2: "Esquizofrenia, trastornos esquizot√≠picos y trastornos delirantes",
  3: "Trastornos neur√≥ticos, trastornos relacionados con el estr√©s y trastornos somatomorfos",
  4: "Trastornos de la personalidad y del comportamiento en adultos",
  5: "Trastornos emocionales y del comportamiento que aparecen habitualmente en la ni√±ez y en la adolescencia",
  6: "S√≠ndromes del comportamiento asociados con alteraciones fisiol√≥gicas y factores f√≠sicos",
}

// Funci√≥n para obtener el nombre del sexo
function getSexoNombre(sexo: number): string {
  return sexo === 1 ? 'Masculino' : 'Femenino'
}

// Funci√≥n para formatear fecha
function formatearFecha(fecha: string): string {
  if (!fecha) return 'N/A'
  return fecha
}

// Funci√≥n para obtener tipo de contacto
function getTipoContacto(tipo: number): string {
  const tipos: Record<number, string> = {
    1: 'Urgente',
    2: 'Programado',
    3: 'Derivaci√≥n'
  }
  return tipos[tipo] || `Tipo ${tipo}`
}

// Funci√≥n para obtener tipo de alta
function getTipoAlta(tipo: number): string {
  const tipos: Record<number, string> = {
    1: 'Alta m√©dica',
    2: 'Alta voluntaria',
    3: 'Traslado',
    4: 'Defunci√≥n',
    5: 'Fuga'
  }
  return tipos[tipo] || `Tipo ${tipo}`
}

// Funci√≥n para obtener categor√≠a de ingreso
function getCategoriaIngreso(categoria: number | string): string {
  const categoriaNum = typeof categoria === 'string' ? parseInt(categoria) : categoria
  return CATEGORIAS_INGRESO[categoriaNum] || `Categor√≠a ${categoria}`
}
---

<DashboardLayout activePage="pacientes" title={`Paciente #${paciente.id_usuario}`}>
  <div class="px-4 py-4 sm:px-6 sm:py-6 lg:px-8 lg:py-8 xl:px-12 xl:py-10 2xl:px-20 2xl:py-12 max-w-[2000px] mx-auto w-full">
    <!-- Breadcrumb -->
    <div class="mb-4 sm:mb-6">
      <a 
        href="/pacientes" 
        class="inline-flex items-center gap-2 px-3 py-2 sm:px-4 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-200 rounded-lg font-medium transition-all duration-200 shadow-sm hover:shadow-md text-sm sm:text-base"
      >
        <span class="material-symbols-outlined text-base sm:text-lg">arrow_back</span>
        Volver a Pacientes
      </a>
    </div>

    <!-- Header -->
    <div class="mb-4 sm:mb-6 lg:mb-8">
      <h1 class="text-2xl sm:text-3xl font-bold mb-2 text-gray-900 dark:text-white">Paciente #{paciente.id_usuario}</h1>
      <p class="text-sm sm:text-base text-gray-600 dark:text-gray-400">Informaci√≥n detallada del paciente</p>
    </div>

    <!-- Informaci√≥n del Paciente -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-4 sm:gap-6 lg:gap-8 xl:gap-10 2xl:gap-12 mb-6 sm:mb-8">
    <!-- Datos Personales -->
    <div class="bg-white dark:bg-gray-800 rounded-lg sm:rounded-xl shadow-md sm:shadow-lg p-4 sm:p-6 lg:p-8 xl:p-10 2xl:p-12 border border-gray-200 dark:border-gray-700 hover:shadow-lg sm:hover:shadow-xl transition-shadow duration-300">
      <h2 class="text-lg sm:text-xl font-semibold mb-4 sm:mb-6 flex items-center gap-2 pb-3 sm:pb-4 border-b border-gray-200 dark:border-gray-700">
        <span class="material-symbols-outlined text-blue-600 dark:text-blue-400">person</span>
        Datos Personales
      </h2>
      <div class="space-y-3 sm:space-y-5">
        <div class="flex justify-between items-center py-2 sm:py-3 border-b border-gray-200 dark:border-gray-700">
          <span class="text-sm sm:text-base text-gray-600 dark:text-gray-400 font-medium">ID Paciente:</span>
          <span class="text-sm sm:text-base font-semibold text-gray-900 dark:text-white">#{paciente.id_usuario}</span>
        </div>
        <div class="flex justify-between items-center py-2 sm:py-3 border-b border-gray-200 dark:border-gray-700">
          <span class="text-sm sm:text-base text-gray-600 dark:text-gray-400 font-medium">Fecha de Nacimiento:</span>
          <span class="text-sm sm:text-base font-semibold text-gray-900 dark:text-white">{paciente.fecha_de_nacimiento}</span>
        </div>
        <div class="flex justify-between items-center py-2 sm:py-3 border-b border-gray-200 dark:border-gray-700">
          <span class="text-sm sm:text-base text-gray-600 dark:text-gray-400 font-medium">Edad:</span>
          <span class="text-sm sm:text-base font-semibold text-gray-900 dark:text-white">{paciente.edad} a√±os</span>
        </div>
        <div class="flex justify-between items-center py-2 sm:py-3 border-b border-gray-200 dark:border-gray-700">
          <span class="text-sm sm:text-base text-gray-600 dark:text-gray-400 font-medium">Sexo:</span>
          <span class={`inline-flex px-2.5 sm:px-3 py-1 text-xs sm:text-sm font-semibold rounded-full ${
            paciente.sexo === 1
              ? 'bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-400'
              : 'bg-pink-100 text-pink-800 dark:bg-pink-900/30 dark:text-pink-400'
          }`}>
            {getSexoNombre(paciente.sexo)}
          </span>
        </div>
        <div class="flex justify-between items-center py-2 sm:py-3">
          <span class="text-sm sm:text-base text-gray-600 dark:text-gray-400 font-medium">CCAA:</span>
          <span class="text-sm sm:text-base font-semibold text-gray-900 dark:text-white">{paciente.ccaa}</span>
        </div>
      </div>
    </div>

    <!-- Datos Cl√≠nicos -->
    <div class="bg-white dark:bg-gray-800 rounded-lg sm:rounded-xl shadow-md sm:shadow-lg p-4 sm:p-6 lg:p-8 xl:p-10 2xl:p-12 border border-gray-200 dark:border-gray-700 hover:shadow-lg sm:hover:shadow-xl transition-shadow duration-300">
      <h2 class="text-lg sm:text-xl font-semibold mb-4 sm:mb-6 flex items-center gap-2 pb-3 sm:pb-4 border-b border-gray-200 dark:border-gray-700">
        <span class="material-symbols-outlined text-green-600 dark:text-green-400">medical_information</span>
        Datos Cl√≠nicos
      </h2>
      <div class="space-y-3 sm:space-y-5">
        <div class="flex flex-row justify-between items-center py-2 sm:py-3 border-b border-gray-200 dark:border-gray-700">
          <span class="text-sm sm:text-base text-gray-600 dark:text-gray-400 font-medium block mb-2">Diagn√≥stico Principal:</span>
          <span class="font-mono text-xs sm:text-sm bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-gray-100 px-2.5 sm:px-3 py-1.5 sm:py-2 rounded inline-block">
            {paciente.diagnostico_principal}
          </span>
        </div>
        <div class="flex flex-row justify-between items-center py-2 sm:py-3 border-b border-gray-200 dark:border-gray-700 gap-2">
          <span class="text-sm sm:text-base text-gray-600 dark:text-gray-400 font-medium">Diagn√≥stico 2:</span>
          <span class="font-mono text-xs sm:text-sm bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-gray-100 px-2.5 sm:px-3 py-1.5 sm:py-2 rounded">
            {paciente['diagn√≥stico 2'] || 'N/A'}
          </span>
        </div>
        <div class="flex justify-between items-center py-2 sm:py-3 border-b border-gray-200 dark:border-gray-700">
          <span class="text-sm sm:text-base text-gray-600 dark:text-gray-400 font-medium">Servicio:</span>
          <span class="px-2.5 sm:px-3 py-1 bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-400 rounded-full text-xs sm:text-sm font-medium">
            {paciente.servicio}
          </span>
        </div>
        <div class="flex flex-col py-2 sm:py-3 border-b border-gray-200 dark:border-gray-700">
          <span class="text-sm sm:text-base text-gray-600 dark:text-gray-400 font-medium mb-2">Categor√≠a de Ingreso:</span>
          <span class="text-sm sm:text-base font-semibold text-gray-900 dark:text-white">
            {getCategoriaIngreso(paciente.categoria_ingreso)}
          </span>
        </div>
      </div>
    </div>
    </div>

    <!-- Informaci√≥n de Ingreso - Ocupa todo el ancho -->
    <div class="bg-white dark:bg-gray-800 rounded-lg sm:rounded-xl shadow-md sm:shadow-lg p-4 sm:p-6 lg:p-8 xl:p-10 2xl:p-12 border border-gray-200 dark:border-gray-700 hover:shadow-lg sm:hover:shadow-xl transition-shadow duration-300 mb-6 sm:mb-8">
      <h2 class="text-lg sm:text-xl font-semibold mb-4 sm:mb-6 flex items-center gap-2 pb-3 sm:pb-4 border-b border-gray-200 dark:border-gray-700">
        <span class="material-symbols-outlined text-orange-600 dark:text-orange-400">calendar_month</span>
        Informaci√≥n de Ingreso
      </h2>
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 sm:gap-6 lg:gap-8 xl:gap-10">
        <div class="space-y-1 sm:space-y-2">
          <span class="text-xs sm:text-sm text-gray-600 dark:text-gray-400 font-medium block">Fecha de Ingreso:</span>
          <span class="text-sm sm:text-base font-semibold text-gray-900 dark:text-white">{formatearFecha(paciente.fecha_de_ingreso)}</span>
        </div>
        <div class="space-y-1 sm:space-y-2">
          <span class="text-xs sm:text-sm text-gray-600 dark:text-gray-400 font-medium block">Fecha de Alta:</span>
          <span class="text-sm sm:text-base font-semibold text-gray-900 dark:text-white">{formatearFecha(paciente.fecha_de_alta)}</span>
        </div>
        <div class="space-y-1 sm:space-y-2">
          <span class="text-xs sm:text-sm text-gray-600 dark:text-gray-400 font-medium block">Estancia (d√≠as):</span>
          <span class="text-base sm:text-lg font-semibold text-blue-600 dark:text-blue-400">{paciente.estancia_dias}</span>
        </div>
        <div class="space-y-1 sm:space-y-2">
          <span class="text-xs sm:text-sm text-gray-600 dark:text-gray-400 font-medium block">Tipo de Contacto:</span>
          <span class="px-2.5 sm:px-3 py-1 bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-400 rounded-full text-xs sm:text-sm font-medium inline-block">
            {getTipoContacto(paciente.tipo_de_contacto)}
          </span>
        </div>
        <div class="space-y-1 sm:space-y-2">
          <span class="text-xs sm:text-sm text-gray-600 dark:text-gray-400 font-medium block">Tipo de Alta:</span>
          <span class="px-2.5 sm:px-3 py-1 bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-400 rounded-full text-xs sm:text-sm font-medium inline-block">
            {getTipoAlta(paciente.tipo_alta)}
          </span>
        </div>
        <div class="space-y-1 sm:space-y-2">
          <span class="text-xs sm:text-sm text-gray-600 dark:text-gray-400 font-medium block">Mes de Ingreso:</span>
          <span class="text-sm sm:text-base font-semibold text-gray-900 dark:text-white">{paciente.mes_de_ingreso}</span>
        </div>
        <div class="space-y-1 sm:space-y-2">
          <span class="text-xs sm:text-sm text-gray-600 dark:text-gray-400 font-medium block">Ingreso en UCI:</span>
          <span class={`px-2.5 sm:px-3 py-1 rounded-full text-xs sm:text-sm font-medium inline-block ${
            paciente.ingreso_en_uci === 1 
              ? 'bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-400' 
              : 'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-400'
          }`}>
            {paciente.ingreso_en_uci === 1 ? 'S√≠' : 'No'}
          </span>
        </div>
        <div class="space-y-1 sm:space-y-2">
          <span class="text-xs sm:text-sm text-gray-600 dark:text-gray-400 font-medium block">D√≠as en UCI:</span>
          <span class="text-sm sm:text-base font-semibold text-gray-900 dark:text-white">{paciente['d√≠as uci'] || 'N/A'}</span>
        </div>
      </div>
    </div>


    <!-- Bot√≥n de acci√≥n -->
    <div class="flex flex-col sm:flex-row justify-between items-center gap-3 sm:gap-0 pt-4 sm:pt-6 border-t border-gray-200 dark:border-gray-700">
      <a 
        href="/pacientes"
        class="w-full sm:w-auto inline-flex items-center justify-center gap-2 px-4 sm:px-6 py-2.5 sm:py-3 bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 text-white rounded-lg font-medium transition-all duration-200 shadow-md hover:shadow-lg transform hover:-translate-y-0.5 text-sm sm:text-base"
      >
        <span class="material-symbols-outlined text-lg sm:text-xl">arrow_back</span>
        Volver al listado
      </a>
      
      <div class="text-xs sm:text-sm text-gray-500 dark:text-gray-400">
        <span class="flex items-center gap-1">
          <span class="material-symbols-outlined text-sm">info</span>
          ID: #{paciente.id_usuario}
        </span>
      </div>
    </div>
  </div>
</DashboardLayout>