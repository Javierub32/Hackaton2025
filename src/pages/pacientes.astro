---
import DashboardLayout from '../layouts/DashboardLayout.astro';
import { getCollection } from 'astro:content';
import { CATEGORIAS_INGRESO } from '../content/config';

// Obtener TODOS los pacientes de la colección
const todosPacientes = await getCollection('datosPrincipales');

// Obtener parámetros de URL para filtros y paginación
const url = new URL(Astro.request.url);
const page = parseInt(url.searchParams.get('page') || '1');
const searchQuery = url.searchParams.get('search') || '';
const sexoFilter = url.searchParams.get('sexo') || '';
const diagnosticoFilter = url.searchParams.get('diagnostico') || '';
const servicioFilter = url.searchParams.get('servicio') || '';
const ccaaFilter = url.searchParams.get('ccaa') || '';
const categoriaFilter = url.searchParams.get('categoria') || '';

const itemsPerPage = 25;

// Validar que el searchQuery sea un número o esté vacío
const searchError = searchQuery !== '' && !/^\d+$/.test(searchQuery);

// Verificar si hay algún filtro activo
const hayFiltrosActivos = searchQuery !== '' || sexoFilter !== '' || diagnosticoFilter !== '' || servicioFilter !== '' || ccaaFilter !== '' || categoriaFilter !== '';

// Obtener valores únicos para los filtros
const diagnosticosUnicos = [...new Set(todosPacientes.map(p => p.data.diagnostico_principal))].sort();
const serviciosUnicos = [...new Set(todosPacientes.map(p => p.data.servicio))].sort();
const ccaaUnicas = [...new Set(todosPacientes.map(p => p.data.ccaa))].sort();
const categoriasUnicas = [...new Set(todosPacientes.map(p => p.data.categoria_ingreso))].sort();

// Filtrar pacientes
let pacientesFiltrados = todosPacientes.filter(paciente => {
  const matchSearch = searchQuery === '' || 
    paciente.data.paciente_id.toString().includes(searchQuery);
  
  const matchSexo = sexoFilter === '' || paciente.data.sexo.toString() === sexoFilter;
  const matchDiagnostico = diagnosticoFilter === '' || paciente.data.diagnostico_principal === diagnosticoFilter;
  const matchServicio = servicioFilter === '' || paciente.data.servicio === servicioFilter;
  const matchCCAA = ccaaFilter === '' || paciente.data.ccaa.toString() === ccaaFilter;
  const matchCategoria = categoriaFilter === '' || paciente.data.categoria_ingreso.toString() === categoriaFilter;
  
  return matchSearch && matchSexo && matchDiagnostico && matchServicio && matchCCAA && matchCategoria;
});

// Ordenar por ID solo si hay filtros activos
if (hayFiltrosActivos) {
  pacientesFiltrados = pacientesFiltrados.sort((a, b) => a.data.paciente_id - b.data.paciente_id);
}

// Calcular paginación
const totalPacientes = pacientesFiltrados.length;
const totalPages = Math.ceil(totalPacientes / itemsPerPage);
const currentPage = Math.min(Math.max(1, page), totalPages || 1);
const startIndex = (currentPage - 1) * itemsPerPage;
const endIndex = Math.min(startIndex + itemsPerPage, totalPacientes);

const pacientesMostrados = pacientesFiltrados.slice(startIndex, endIndex);

// Función para obtener el nombre del sexo
function getSexoNombre(sexo: number): string {
  switch(sexo) {
    case 1: return 'Masculino';
    case 2: return 'Femenino';
    default: return 'No especificado';
  }
}

// Función para obtener el nombre de la CCAA
function getCCAANombre(ccaa: number): string {
  const ccaaMap: Record<number, string> = {
    1: 'Andalucía',
    2: 'La Rioja',
    // Añade más según necesites
  };
  return ccaaMap[ccaa] || `CCAA ${ccaa}`;
}
---

<DashboardLayout title="Gestión de Pacientes" activePage="pacientes">
  <main class="flex-1 p-3 sm:p-4 lg:p-6 overflow-y-auto overflow-x-hidden w-full space-y-6">

    {/* Encabezado */}
    <header>
      <h1 class="text-xl sm:text-2xl lg:text-3xl font-bold mb-1">Gestión de Pacientes</h1>
      <p class="text-sm sm:text-base text-gray-600 dark:text-gray-400">
        Listado de {totalPacientes.toLocaleString()} pacientes del sistema
      </p>
    </header>

    {/* Formulario de filtros */}
    <form method="get" class="space-y-6">
      {/* Barra de búsqueda */}
      <div>
        <div class="relative">
          <span class="material-symbols-outlined absolute left-3 top-1/2 -translate-y-1/2 text-gray-400">
            search
          </span>
          <input
            type="text"
            name="search"
            value={searchQuery}
            placeholder="Buscar por ID de paciente..."
            class={`w-full pl-10 pr-4 py-2 text-sm sm:text-base rounded-lg border bg-white dark:bg-gray-800 focus:ring-primary ${
              searchError 
                ? 'border-red-500 dark:border-red-400 focus:border-red-500' 
                : 'border-gray-300 dark:border-gray-600 focus:border-primary'
            }`}
          />
        </div>
        {searchError && (
          <div class="mt-2 flex items-center gap-2 text-red-600 dark:text-red-400 text-sm">
            <span class="material-symbols-outlined text-base">error</span>
            <p>Por favor, ingresa solo números para buscar por ID de paciente.</p>
          </div>
        )}
      </div>

      {/* Filtros */}
      <section class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-3 sm:gap-4">
        {/* Sexo */}
        <label class="flex flex-col gap-2 text-sm font-medium text-gray-600 dark:text-gray-400">
          Sexo
          <select
            name="sexo"
            id="sexo"
            class="w-full rounded-lg border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 focus:border-primary focus:ring-primary"
          >
            <option value="">Todos</option>
            <option value="1" selected={sexoFilter === '1'}>Masculino</option>
            <option value="2" selected={sexoFilter === '2'}>Femenino</option>
          </select>
        </label>

        {/* Diagnóstico */}
        <label class="flex flex-col gap-2 text-sm font-medium text-gray-600 dark:text-gray-400">
          Diagnóstico
          <select
            name="diagnostico"
            id="diagnostico"
            class="w-full rounded-lg border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 focus:border-primary focus:ring-primary"
          >
            <option value="">Todos</option>
            {diagnosticosUnicos.slice(0, 50).map(diag => (
              <option value={diag} selected={diagnosticoFilter === diag}>{diag}</option>
            ))}
          </select>
        </label>

        {/* Servicio */}
        <label class="flex flex-col gap-2 text-sm font-medium text-gray-600 dark:text-gray-400">
          Servicio
          <select
            name="servicio"
            id="servicio"
            class="w-full rounded-lg border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 focus:border-primary focus:ring-primary"
          >
            <option value="">Todos</option>
            {serviciosUnicos.map(serv => (
              <option value={serv} selected={servicioFilter === serv}>{serv}</option>
            ))}
          </select>
        </label>

        {/* CCAA */}
        <label class="flex flex-col gap-2 text-sm font-medium text-gray-600 dark:text-gray-400">
          Comunidad Autónoma
          <select
            name="ccaa"
            id="ccaa"
            class="w-full rounded-lg border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 focus:border-primary focus:ring-primary"
          >
            <option value="">Todas</option>
            {ccaaUnicas.map(ccaa => (
              <option value={ccaa} selected={ccaaFilter === ccaa.toString()}>
                {getCCAANombre(ccaa)}
              </option>
            ))}
          </select>
        </label>

        {/* Categoría */}
        <label class="flex flex-col gap-2 text-sm font-medium text-gray-600 dark:text-gray-400">
          Categoría de Ingreso
          <select
            name="categoria"
            id="categoria"
            class="w-full rounded-lg border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-800 focus:border-primary focus:ring-primary"
          >
            <option value="">Todas</option>
            {categoriasUnicas.map(cat => (
              <option value={cat} selected={categoriaFilter === cat.toString()}>
                {CATEGORIAS_INGRESO[cat] || `Categoría ${cat}`}
              </option>
            ))}
          </select>
        </label>
      </section>

      {/* Botones */}
      <div class="flex flex-col sm:flex-row gap-3">
        <button
          type="submit"
          class="w-full sm:w-auto px-4 py-2 bg-blue-600 text-white hover:bg-blue-700 dark:bg-blue-400 dark:text-slate-900 dark:hover:bg-blue-300 rounded-lg transition-colors font-medium flex items-center justify-center gap-2"
        >
          <span class="material-symbols-outlined text-lg">filter_alt</span>
          Aplicar Filtros
        </button>
        <a
          href="/pacientes"
          class="w-full sm:w-auto px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-800 dark:text-gray-200 rounded-lg hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors font-medium flex items-center justify-center gap-2"
        >
          <span class="material-symbols-outlined text-lg">clear</span>
          Limpiar Filtros
        </a>
      </div>
    </form>

    {/* Tabla de pacientes */}
    <section class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 shadow-sm hidden lg:block">
      <div class="overflow-x-auto">
        <table class="w-full table-fixed">
          <thead class="bg-gray-50 dark:bg-gray-700/50">
            <tr>
              {["ID","Edad","Sexo","Diagnóstico","Servicio","Estancia","F. Ingreso","CCAA","Ver más"].map((t) => (
                <th class="px-2 py-2 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-tight">{t}</th>
              ))}
            </tr>
          </thead>
          <tbody class="divide-y divide-gray-200 dark:divide-gray-700">
            {pacientesMostrados.length === 0 ? (
              <tr>
                <td colspan="9" class="px-2 py-12 text-center text-gray-500 dark:text-gray-400">
                  <span class="material-symbols-outlined text-4xl mb-2 block">search_off</span>
                  No se encontraron pacientes con los filtros aplicados
                </td>
              </tr>
            ) : (
              pacientesMostrados.map((paciente) => (
                <tr class="hover:bg-gray-50 dark:hover:bg-gray-700/50 transition-colors">
                  <td class="px-2 py-2 text-xs font-medium truncate">#{paciente.data.paciente_id}</td>
                  <td class="px-2 py-2 text-xs truncate">{paciente.data.edad}</td>
                  <td class="px-2 py-2 text-xs truncate">{getSexoNombre(paciente.data.sexo).substring(0, 1)}</td>
                  <td class="px-2 py-2 text-xs font-mono truncate">{paciente.data.diagnostico_principal}</td>
                  <td class="px-2 py-2 text-xs truncate">{paciente.data.servicio}</td>
                  <td class="px-2 py-2 text-xs text-center truncate">{paciente.data.estancia_dias}d</td>
                  <td class="px-2 py-2 text-xs truncate">{paciente.data.fecha_ingreso}</td>
                  <td class="px-2 py-2 text-xs truncate">{getCCAANombre(paciente.data.ccaa)}</td>
<td class="px-2 py-2 text-xs text-center">
  <a
    href={`/paciente/${paciente.data.paciente_id}?fecha=${encodeURIComponent(paciente.data.fecha_ingreso)}`}
    class="group inline-flex items-center justify-center w-10 h-10 rounded-lg
           bg-blue-600 text-white hover:bg-blue-700
           dark:bg-blue-400 dark:text-slate-900 dark:hover:bg-blue-300
           focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2
           focus-visible:ring-blue-500 dark:focus-visible:ring-blue-300
           focus-visible:ring-offset-white dark:focus-visible:ring-offset-slate-900
           transition-colors"
    aria-label="Ver detalles del paciente"
  >
    <span class="material-symbols-outlined text-lg" aria-hidden="true">visibility</span>
    <span class="sr-only">Ver detalles</span>
  </a>
</td>


                </tr>
              ))
            )}
          </tbody>
        </table>
      </div>

      {/* Paginación */}
      <footer class="px-6 py-4 border-t border-gray-200 dark:border-gray-700 flex flex-col sm:flex-row items-center justify-between gap-4">
        <p class="text-sm text-gray-600 dark:text-gray-400">
          Mostrando <span class="font-medium">{startIndex + 1}</span> a <span class="font-medium">{endIndex}</span> de <span class="font-medium">{totalPacientes.toLocaleString()}</span> resultados
        </p>
        <nav class="flex gap-2 flex-wrap justify-center">
          {currentPage > 1 && (
            <a href={`...`} class="px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-700 font-medium">← Anterior</a>
          )}
          <span class="px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 font-medium">Página {currentPage} de {totalPages}</span>
          {currentPage < totalPages && (
            <a href={`...`} class="px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-700 font-medium">Siguiente →</a>
          )}
        </nav>
      </footer>
    </section>

    {/* Vista móvil */}
    <section class="lg:hidden space-y-4">
      {pacientesMostrados.length === 0 ? (
        <article class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-8 text-center">
          <span class="material-symbols-outlined text-4xl mb-2 block text-gray-400">search_off</span>
          <p class="text-gray-500 dark:text-gray-400">No se encontraron pacientes con los filtros aplicados</p>
        </article>
      ) : (
        pacientesMostrados.map((paciente) => (
          <article class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-4 shadow-sm">
            <header class="flex items-start justify-between mb-3">
              <div>
                <h3 class="text-lg font-bold text-primary">#{paciente.data.paciente_id}</h3>
                <p class="text-sm text-gray-600 dark:text-gray-400">
                  {getSexoNombre(paciente.data.sexo)} • {paciente.data.edad} años
                </p>
              </div>
  <a
    href={`/paciente/${paciente.data.paciente_id}?fecha=${encodeURIComponent(paciente.data.fecha_ingreso)}`}
    class="group inline-flex items-center justify-center w-10 h-10 rounded-lg
           bg-blue-600 text-white hover:bg-blue-700
           dark:bg-blue-400 dark:text-slate-900 dark:hover:bg-blue-300
           focus:outline-none focus-visible:ring-2 focus-visible:ring-offset-2
           focus-visible:ring-blue-500 dark:focus-visible:ring-blue-300
           focus-visible:ring-offset-white dark:focus-visible:ring-offset-slate-900
           transition-colors"
    aria-label="Ver detalles del paciente"
  >
    <span class="material-symbols-outlined text-lg" aria-hidden="true">visibility</span>
    <span class="sr-only">Ver detalles</span>
  </a>
            </header>

            <dl class="space-y-3 text-sm">
              <div class="grid grid-cols-2 gap-4">
                <div>
                  <dt class="text-gray-500 dark:text-gray-400 text-xs">Diagnóstico</dt>
                  <dd class="font-mono font-medium truncate">{paciente.data.diagnostico_principal}</dd>
                </div>
                <div>
                  <dt class="text-gray-500 dark:text-gray-400 text-xs">Servicio</dt>
                  <dd class="font-medium truncate">{paciente.data.servicio}</dd>
                </div>
              </div>
              <div class="grid grid-cols-2 gap-4">
                <div>
                  <dt class="text-gray-500 dark:text-gray-400 text-xs">Estancia</dt>
                  <dd class="font-medium">{paciente.data.estancia_dias} días</dd>
                </div>
                <div>
                  <dt class="text-gray-500 dark:text-gray-400 text-xs">Ingreso</dt>
                  <dd class="font-medium">{paciente.data.fecha_ingreso}</dd>
                </div>
              </div>
              <div>
                <dt class="text-gray-500 dark:text-gray-400 text-xs">CCAA</dt>
                <dd class="font-medium">{getCCAANombre(paciente.data.ccaa)}</dd>
              </div>
            </dl>
          </article>
        ))
      )}

      {/* Paginación móvil */}
      <footer class="bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 p-4 text-center space-y-3">
        <p class="text-sm text-gray-600 dark:text-gray-400">
          Mostrando <span class="font-medium">{startIndex + 1}</span> a <span class="font-medium">{endIndex}</span> de <span class="font-medium">{totalPacientes.toLocaleString()}</span>
        </p>
        <nav class="flex gap-2 justify-center">
          {currentPage > 1 && (
            <a href={`...`} class="px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-700 font-medium text-sm">← Anterior</a>
          )}
          <span class="px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 font-medium text-sm">{currentPage} / {totalPages}</span>
          {currentPage < totalPages && (
            <a href={`...`} class="px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-700 font-medium text-sm">Siguiente →</a>
          )}
        </nav>
      </footer>
    </section>

  </main>
</DashboardLayout>
